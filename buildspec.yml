version: 0.2
phases:
  pre_build:
    commands:
    - echo Logging in to Amazon ECR with $AWS_DEFAULT_REGION and $AWS_ACCOUNT_ID and $REPOSITORY_URI
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
    - REPOSITORY_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/cogitosum/boot3warweb"
  build:
    commands:
    - echo downloading the war file from s3
    - echo "${REPOSITORY_URI}:latest"
    - aws s3api get-object --bucket cogitosum-boot3warweb-ohio --key webModule.war webModule.war
    - pwd
    - ls -l
    - unzip webModule.war start-server.sh
    - echo Building the Docker image...
    - docker build -t boot3warweb .
    - docker tag boot3warweb:latest $REPOSITORY_URI:latest
  post_build:
    commands:
    - echo Pushing the Docker image to ECR...
    - echo Get list of images
    - docker images
    - echo $REPOSITORY_URI
    - docker push $REPOSITORY_URI:latest
    - echo Writing imagedefinitions.json...
    - printf '[{"name":"boot3warweb","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json
    - cat imagedefinitions.json
    - if ! type "$dos2unix" > /dev/null; then echo "foobar_command_name does not exist"; fi
#    - dos2unix imagedefinitions.json
#    - cat imagedefinitions.json
#    - echo Triggering CodeDeploy deployment...
#    - aws deploy create-deployment --application-name boot3warweb --deployment-group-name boot3warweb2025 --s3-location bucket=cogitosum-boot3warweb-ohio,key=appspec.zip,bundleType=zip
artifacts:
  files:
  - imagedefinitions.json